<?php

require_once dirname(__FILE__).'/../src/Bootstrap.php';

// remove existing file everything gets made from scratch
unlink(__DIR__.'/../src/Bootstrap.dic.php');

/**
 * load xml loader and php dumper
 */
require_once 'sfConfig/Exception/FileLoaderLoadException.php';
require_once 'sfConfig/FileLocatorInterface.php';
require_once 'sfConfig/FileLocator.php';
require_once 'sfConfig/Resource/ResourceInterface.php';
require_once 'sfConfig/Resource/FileResource.php';
require_once 'sfConfig/Loader/LoaderInterface.php';
require_once 'sfConfig/Loader/Loader.php';
require_once 'sfConfig/Loader/FileLoader.php';
require_once 'sfDependencyInjection/Variable.php';
require_once 'sfDependencyInjection/SimpleXMLElement.php';
require_once 'sfDependencyInjection/Loader/FileLoader.php';
require_once 'sfDependencyInjection/Loader/XmlFileLoader.php';
require_once 'sfDependencyInjection/Dumper/DumperInterface.php';
require_once 'sfDependencyInjection/Dumper/Dumper.php';
require_once 'sfDependencyInjection/Dumper/PhpDumper.php';

define('DIC_BOILERPLATE', <<<EOD
<?php
/**
 * Dependency Injection Controller
 *
 * generated by my army of bots!
 *
 * PHP Version 5
 *
 * @category   Busmaster
 * @package    Server
 * @subpackage Bootstrap
 * @author     Lucas S. Bickel <hairmare@purplehaze.ch>
 * @copyright  2012 Lucas S. Bickel 2011 - Alle Rechte vorbehalten
 * @license    http://www.gnu.org/licenses/gpl-3.0.txt GPLv3
 * @link       http://purplehaze.ch
 */

EOD
);
define('DIC_CLASSPART', <<<EOD
 * by the Symfony Dependency Injection Component.
 *
 * PHP Version 5
 *
 * @category   Busmaster
 * @package    Server
 * @subpackage Bootstrap
 * @author     Lucas S. Bickel <hairmare@purplehaze.ch>
 * @license    http://www.gnu.org/licenses/gpl-3.0.txt GPLv3
 * @link       http://purplehaze.ch
 *
 */
// @codingStandardsIgnoreStart
/**
 * Sadly I found no really easy way to do this, all I really wanted
 * is to just ignore the line length sniff on this file and this 
 * file only. Maybe I'll take the time to fix when the stack is a
 * bit more complete, for now lets just hope devs dont misuse this
 * to much and start using stange service ids...
 * 
 * @SuppressWarnings(PHPMD)
EOD
);

/**
 * create some tools
 */
$dic = new Symfony\Component\DependencyInjection\ContainerBuilder;
$load = new Symfony\Component\DependencyInjection\Loader\XmlFileLoader(
    $dic,
    new Symfony\Component\Config\FileLocator(__DIR__.'/../etc')
);
$dump = new Symfony\Component\DependencyInjection\Dumper\PhpDumper($dic);

$search = $replace = array();

$search[] = '<?php';
$replace[] = DIC_BOILERPLATE;

$search[] = ' * by the Symfony Dependency Injection Component.';
$replace[] = DIC_CLASSPART;

/*
 * load from xml and recreate php file
 */
$load->load('services.xml');
file_put_contents(
    __DIR__.'/../src/Bootstrap.dic.php',
    str_replace(
        $search,
        $replace,
        $dump->dump(
            array(
                'class' => 'BootstrapDic'
            )
        )
    )."\n// @codingStandardsIgnoreEnd"
);
